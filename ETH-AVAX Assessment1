// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ProjectContract {
    address public shopkeeper;
    uint256 public balance;

    constructor() {
        shopkeeper = msg.sender;
    }

    // Function to deposit Ether into the contract
    function stake() public payable {
        require(msg.value > 0, "stake amount must be greater than 0");
        balance += msg.value;
    }

    // Function to withdraw Ether from the contract
    function deposit(uint256 amount) public {
        require(msg.sender == shopkeeper, "Shopkeeper can withdraw funds");
        require(amount <= balance, "Balance is insufficient");

        balance -= amount;
        payable(msg.sender).transfer(amount);
    }

    // Function to demonstrate assert statement
    function checkBalance() public view {
        assert(balance >= 0);
    }

    // Function to demonstrate revert statement
    function Revert() public pure {
        // This function will always revert with the given error message
        revert("forced revert");
    }
}
